nb10 <- estim_ncpPCA(importaciones_2,ncp.max=6,method = 'EM',method.cv = 'loo')
nb10 <- estim_ncpPCA(importaciones_2,ncp.max=6,method = 'EM')
nb10 <- estim_ncpPCA(importaciones_2,ncp.max=4,method = 'EM')
nb10
nb10 <- estim_ncpPCA(importaciones_2,ncp.max=2,method = 'EM')
nb10
nb10 <- estim_ncpPCA(importaciones_2,ncp.max=6,method = 'Regularized')
nb10
nb5 <- estim_ncpPCA(importaciones_1,ncp.max=6,method = 'EM')
nb5
nb10 <- estim_ncpPCA(importaciones_2,ncp.max=6,method = 'EM')
nb15 <- estim_ncpPCA(importaciones_3,ncp.max=6,method = 'EM')
nb10 <- estim_ncpPCA(importaciones_2,ncp.max=6,method = 'Regularized')
nb10
nb10 <- estim_ncpPCA(importaciones_2,ncp.max=6)
nb10
## Imputación
imp10NA<-imputePCA(data.frame(importaciones_2),ncp=2)
imp10NA
## Imputación
imp10NA<-imputePCA(data.frame(importaciones_2),ncp=2)
imp10NA
## Imputación
imp10NA<-imputePCA(data.frame(importaciones_2),ncp=6)
## Imputación
imp10NA<-imputePCA(data.frame(importaciones_2),ncp=3)
## Imputación
imp10NA<-imputePCA(data.frame(importaciones_2),ncp=4)
## Imputación
imp5NA<-imputePCA(data.frame(importaciones_1),ncp=6)
## Imputación
imp5NA<-imputePCA(data.frame(importaciones_1),ncp=5)
imp5NA$completeObs
## Imputación
imp5NA<-imputePCA(data.frame(importaciones_1),ncp=2)
imp5NA$completeObs
nb10 <- estim_ncpPCA(importaciones_2,ncp.max=2)
nb10
nb10 <- estim_ncpPCA(importaciones_2,ncp.max=6)
## Imputación
imp10NA<-imputePCA(data.frame(importaciones_2),ncp=2)
imp10NA$completeObs
## ACP Impute ade4
pca.em10 <- dudi.pca(imp10NA$completeObs,nf=3,scannf = FALSE)
pca.em10$li #Componentes principales individuos
pca.em10$co #Componentes principales variables
pca.em10$c1 #Vectores propios
pca.em10$eig #Valores propios
pca.em10$tab #Matriz modificada
nb15 <- estim_ncpPCA(importaciones_3,ncp.max=6,method = 'EM')
## Imputación
imp15NA<-imputePCA(data.frame(importaciones_3),ncp=2)
imp15NA$completeObs
## ACP Impute ade4
pca.em15 <- dudi.pca(imp15NA$completeObs,nf=3,scannf = FALSE)
pca.em15$li #Componentes principales individuos
pca.em15$co #Componentes principales variables
pca.em15$c1 #Vectores propios
pca.em15$eig #Valores propios
pca.em15$tab #Matriz modificada
## Imputación
imp20NA<-imputePCA(data.frame(importaciones_4),ncp=2)
imp20NA$completeObs
## ACP Impute ade4
pca.em20 <- dudi.pca(imp15NA$completeObs,nf=3,scannf = FALSE)
pca.em20$li #Componentes principales individuos
pca.em20$co #Componentes principales variables
pca.em20$c1 #Vectores propios
pca.em20$eig #Valores propios
pca.em20$tab #Matriz modificada
pca.em10$eig #Valores propios
pca.em10$eig #Valores propios
pca.em15$eig #Valores propios
pca.em15$eig #Valores propios
pca.em20$eig #Valores propios
pca.em15$eig #Valores propios
## ACP Impute ade4
pca.em20 <- dudi.pca(imp20NA$completeObs,nf=3,scannf = FALSE)
pca.em15$eig #Valores propios
pca.em20$eig #Valores propios
pca.em20$eig #Valores propios
pca.em5$c1 #Vectores propios
pca.em10$c1 #Vectores propios
pca.em15$c1 #Vectores propios
pca.em20$c1 #Vectores propios
pca.em5$li #Componentes principales individuos
pca.em10$li #Componentes principales individuos
pca.em15$li #Componentes principales individuos
pca.em20$li #Componentes principales individuos
#ACP (INDIVIDUOS)
ACP_manual(importaciones,20,6,2,1) #valores y vectores propios
#****ACP MANUAL DATOS COMPLETOS
#ACP (VARIABLES)
ACP_manual(importaciones,20,6,2,0) #valores y vectores propios
#ACP (INDIVIDUOS)
ACP_manual(importaciones,20,6,2,1) #valores y vectores propios
acpnipals$eig #valores propios
#Comparación poder descriptivo 2 primeros ejes:
acpnipals$eig[1]
#Comparación poder descriptivo 2 primeros ejes:
acpnipals$eig[1,2]
#Comparación poder descriptivo 2 primeros ejes:
acpnipals$eig[1:2]
#Comparación poder descriptivo 2 primeros ejes:
sum(acpnipals$eig[1:2])/sum(acpnipals$eig)
sum(acpnipals5NA$eig[1:2])/sum(acpnipals5NA$eig)
#Comparación poder descriptivo 2 primeros ejes:
sum(acpnipals$eig[1:2])/sum(acpnipals$eig) #Completa
sum(acpnipals5NA$eig[1:2])/sum(acpnipals5NA$eig) #Nipals 5%
sum(acpnipals10NA$eig[1:2])/sum(acpnipals10NA$eig) #Nipals 10%
sum(acpnipals15NA$eig[1:2])/sum(acpnipals15NA$eig) #Nipals 15%
sum(acpnipals20NA$eig[1:2])/sum(acpnipals20NA$eig) #Nipals 20%
sum(pca.em5$eig[1:2])/sum(pca.em5$eig)
sum(acpnipals$eig[1:2])/sum(acpnipals$eig) #Completa
sum(acpnipals5NA$eig[1:2])/sum(acpnipals5NA$eig) #Nipals 5%
sum(acpnipals10NA$eig[1:2])/sum(acpnipals10NA$eig) #Nipals 10%
sum(acpnipals15NA$eig[1:2])/sum(acpnipals15NA$eig) #Nipals 15%
sum(acpnipals20NA$eig[1:2])/sum(acpnipals20NA$eig) #Nipals 20%
sum(pca.em5$eig[1:2])/sum(pca.em5$eig) #ACP-EM 5%
sum(pca.em10$eig[1:2])/sum(pca.em10$eig) #ACP-EM 5%
sum(pca.em15$eig[1:2])/sum(pca.em15$eig) #ACP-EM 5%
sum(pca.em20$eig[1:2])/sum(pca.em20$eig) #ACP-EM 5%
acpnipals$eig
acpnipals$eig
acpnipals$eig
acpnipals$c1 #vectores propios primeras 2 dim
acpnipals$c1 #vectores propios primeras 2 dim
acpnipals$li #componentes primeras 2 dim
ACP_manual(importaciones,20,6,3,1) #componentes
#**ACP(VARIABLES)
#?????
PCA(importaciones)
#**ACP(VARIABLES)
#?????
PCA(importaciones)$ind$coord
acpnipals$li #componentes primeras 2 dim
acpnipals$li #componentes primeras 2 dim
acpnipals$li #componentes primeras 2 dim
acpnipals$li[1]
acpnipals5NA$li[1]
acpnipals5NA$li[,1]
#Correlacion componente 1 completos vs faltantes
cor(acpnipals$li[1],acpnipals5NA$li[,1])
abs(-1)
#Correlacion componente 1 completos vs faltantes
abs(cor(acpnipals$li[1],acpnipals5NA$li[,1])) #5% nipals
abs(cor(acpnipals$li[1],acpnipals10NA$li[,1])) #10% nipals
abs(cor(acpnipals$li[1],acpnipals15NA$li[,1])) #15% nipals
abs(cor(acpnipals$li[1],acpnipals20NA$li[,1])) #20% nipals
abs(cor(acpnipals$li[1],pca.em5$li[,1]))
abs(cor(acpnipals$li[1],acpnipals5NA$li[,1])) #5% nipals
abs(cor(acpnipals$li[1],acpnipals10NA$li[,1])) #10% nipals
abs(cor(acpnipals$li[1],acpnipals15NA$li[,1])) #15% nipals
abs(cor(acpnipals$li[1],acpnipals20NA$li[,1])) #20% nipals
abs(cor(acpnipals$li[1],pca.em5$li[,1])) #5% ACP-EM
abs(cor(acpnipals$li[1],pca.em10$li[,1])) #10% ACP-EM
abs(cor(acpnipals$li[1],pca.em15$li[,1])) #15% ACP-EM
abs(cor(acpnipals$li[1],pca.em20$li[,1])) #20% ACP-
acpnipals=dudi.pca(importaciones,scannf=F,nf=6)
acpnipals=dudi.pca(importaciones,scannf=F,nf=6)
acpnipals=dudi.pca(importaciones,scannf=F,nf=6)
acpnipals
par(mfrow=c(1,2))
s.label(nipals1$li,boxes=FALSE)
s.label(nipals2.na.10$li,boxes=FALSE) ## Nube de individuos (matriz con NA)
x11()
s.label(acpnipals$li,boxes=FALSE)
s.label(nipals2.na.10$li,boxes=FALSE) ## Nube de individuos Nipals 20% NA
x11()
par(mfrow=c(1,2))
s.label(acpnipals$li,boxes=FALSE)
s.label(nipals2.na.10$li,boxes=FALSE) ## Nube de individuos Nipals 20% NA
x11()
par(mfrow=c(1,2))
s.label(acpnipals$li,boxes=FALSE)
s.label(acpnipals20NA$li,boxes=FALSE) ## Nube de individuos Nipals 20% NA
s.label(pca.em20$li,boxes=FALSE)
x11()
par(mfrow=c(2,2))
s.label(acpnipals$li,boxes=FALSE)
s.label(acpnipals20NA$li,boxes=FALSE) ## Nube de individuos Nipals 20% NA
s.label(pca.em20$li,boxes=FALSE)
x11()
s.label(acpnipals$li,boxes=FALSE)
x11()
par(mfrow=c(2,1))
s.label(acpnipals20NA$li,boxes=FALSE) ## Nube de individuos Nipals 20% NA
s.label(pca.em20$li,boxes=FALSE)
x11()
par(mfrow=c(1,2))
s.label(acpnipals20NA$li,boxes=FALSE) ## Nube de individuos Nipals 20% NA
s.label(pca.em20$li,boxes=FALSE)
x11()
s.label(acpnipals$li,boxes=FALSE)
x11()
par(mfrow=c(1,2))
s.label(acpnipals20NA$li,boxes=FALSE) ## Nube de individuos Nipals 20% NA
s.label(pca.em20$li,boxes=FALSE)
x11()
s.corcircle(acpnipals$co)
x11()
par(mfrow=c(1,2))
s.corcircle(acpnipals20NA$co) ## Nube de variables Nipals 20% NA
s.corcircle(pca.em20$co) ## Nube de variables ACP-EM 20% NA
x11()
s.corcircle(-acpnipals$co)
x11()
par(mfrow=c(1,2))
s.corcircle(acpnipals20NA$co) ## Nube de variables Nipals 20% NA
s.corcircle(pca.em20$co) ## Nube de variables ACP-EM 20% NA
x11()
par(mfrow=c(1,2))
s.corcircle(acpnipals20NA$co) ## Nube de variables Nipals 20% NA
s.corcircle(-pca.em20$co) ## Nube de variables ACP-EM 20% NA
s.corcircle(pca.em20$co) ## Nube de variables ACP-EM 20% NA
s.corcircle(-acpnipals$co)
s.corcircle(acpnipals$co)
x11()
par(mfrow=c(1,2))
s.corcircle(-acpnipals20NA$co) ## Nube de variables Nipals 20% NA
s.corcircle(-pca.em20$co) ## Nube de variables ACP-EM 20% NA
x11()
par(mfrow=c(1,2))
s.corcircle(acpnipals20NA$co) ## Nube de variables Nipals 20% NA
s.corcircle(-pca.em20$co) ## Nube de variables ACP-EM 20% NA
acpnipals20NA$co
-pca.em20$co
pca.em20$co
s.corcircle(c(-pca.em20$co[,1],pca.em20$co[,2])) ## Nube de variables ACP-EM 20% NA
s.corcircle(acpnipals20NA$co) ## Nube de variables Nipals 20% NA
s.corcircle(-acpnipals$co)
s.corcircle(acpnipals20NA$co) ## Nube de variables Nipals 20% NA
x11()
s.corcircle(-acpnipals$co)
x11()
s.corcircle(-acpnipals$co)
x11()
s.corcircle(acpnipals20NA$co) ## Nube de variables Nipals 20% NA
s.corcircle(c(-pca.em20$co[,1],pca.em20$co[,2])) ## Nube de variables ACP-EM 20% NA
x11()
s.corcircle(acpnipals20NA$co) ## Nube de variables Nipals 20% NA
s.corcircle(-acpnipals$co)
acpnipals20NA$co
-acpnipals$co
x11()
s.corcircle(-acpnipals$co)
cbind(1,2,3,4)
rbind(1,2,3,4)
acpnipals20NA$co
-acpnipals$co
-acpnipals20NA$co[,2]
circulonipals20NA<-rbind(c(acpnipals20NA$co[,1],-acpnipals20NA$co[,2]))
circulonipals20NA
circulonipals20NA
circulonipals20NA<-rbind(acpnipals20NA$co[,1],-acpnipals20NA$co[,2])
circulonipals20NA
circulonipals20NA<-cbind(acpnipals20NA$co[,1],-acpnipals20NA$co[,2])
circulonipals20NA
acpnipals20NA$co #Coordenadas de las variables
circulonipals20NA<-cbind(acpnipals20NA$co[,1],-acpnipals20NA$co[,2])
s.corcircle(circulonipals20NA) ## Nube de variables Nipals 20% NA
x11()
s.corcircle(circulonipals20NA) ## Nube de variables Nipals 20% NA
x11()
s.corcircle(-acpnipals$co)
x11()
s.corcircle(circulonipals20NA) ## Nube de variables Nipals 20% NA
x11()
s.corcircle(c(-pca.em20$co[,1],pca.em20$co[,2])) ## Nube de variables ACP-EM 20% NA
s.corcircle(pca.em20$co) ## Nube de variables ACP-EM 20% NA
pca.em20$co
-acpnipals$co
pca.em20$co[,1]
pca.em20$co[,2]
-pca.em20$co[,2]
circuloacpem20NA<-cbind(-pca.em20$co[,1],-pca.em20$co[,2])
x11()
par(mfrow=c(1,2))
s.corcircle(circulonipals20NA) ## Nube de variables Nipals 20% NA
s.corcircle(circuloacpem20NA) ## Nube de variables ACP-EM 20% NA
x11()
par(mfrow=c(1,2))
s.corcircle(circulonipals20NA) ## Nube de variables Nipals 20% NA
s.corcircle(circuloacpem20NA) ## Nube de variables ACP-EM 20% NA
s.corcircle(circuloacpem20NA) ## Nube de variables ACP-EM 20% NA
circuloacpem20NA
circulonipals20NA
pca.em20$co
acpnipals20NA$co
acpnipals20NA$co[,1]
pca.em20$co[,1]
rownames(circuloacpem20NA)<-c("Colombia","Brasil","Chile","Argentina","Ecuador","Peru")
circuloacpem20NA
s.corcircle(circuloacpem20NA) ## Nube de variables ACP-EM 20% NA
s.corcircle(circulonipals20NA) ## Nube de variables Nipals 20% NA
x11()
par(mfrow=c(1,2))
s.corcircle(circulonipals20NA) ## Nube de variables Nipals 20% NA
s.corcircle(circuloacpem20NA) ## Nube de variables ACP-EM 20% NA
x11()
s.corcircle(-acpnipals$co)
x11()
par(mfrow=c(1,2))
s.corcircle(circulonipals20NA) ## Nube de variables Nipals 20% NA
s.corcircle(circuloacpem20NA) ## Nube de variables ACP-EM 20% NA
acpnipals$c1 #vectores propios primeras 2 dim
#Ortogonalidad
t(acpnipals$c1[,1])%*%acpnipals$c1[,2] #ACP completo
acpnipals5NA$c1
t(acpnipals5NA$c1[,1])%*%acpnipals5NA$c1[,2] #Nipals 5%
t(acpnipals5NA$c1[,1])%*%acpnipals5NA$c1[,2] #Nipals 5%
t(acpnipals10NA$c1[,1])%*%acpnipals10NA$c1[,2] #Nipals 10%
t(acpnipals15NA$c1[,1])%*%acpnipals15NA$c1[,2] #Nipals 15%
t(acpnipals20NA$c1[,1])%*%acpnipals20NA$c1[,2] #Nipals 20%
t(pca.em5$c1[,1])%*%pca.em5$c1[,2]
t(pca.em5$c1[,1])%*%pca.em5$c1[,2] #ACP-EM 5%
t(pca.em10$c1[,1])%*%pca.em10$c1[,2] #ACP-EM 10%
t(pca.em15$c1[,1])%*%pca.em15$c1[,2] #ACP-EM 15%
t(pca.em20$c1[,1])%*%pca.em20$c1[,2] #ACP-EM 20%
t(acpnipals$c1[,1])%*%acpnipals$c1[,2] #ACP completo
t(acpnipals5NA$c1[,1])%*%acpnipals5NA$c1[,2] #Nipals 5%
t(acpnipals10NA$c1[,1])%*%acpnipals10NA$c1[,2] #Nipals 10%
t(acpnipals15NA$c1[,1])%*%acpnipals15NA$c1[,2] #Nipals 15%
t(acpnipals20NA$c1[,1])%*%acpnipals20NA$c1[,2] #Nipals 20%
t(pca.em5$c1[,1])%*%pca.em5$c1[,2] #ACP-EM 5%
t(pca.em10$c1[,1])%*%pca.em10$c1[,2] #ACP-EM 10%
t(pca.em15$c1[,1])%*%pca.em15$c1[,2] #ACP-EM 15%
t(pca.em20$c1[,1])%*%pca.em20$c1[,2] #ACP
#**ACP EM matriz al 5%
ACPEM(importaciones_1,20,6)
acpnipals
acpnipals$li[,1]
#Ortogonalidad en las componentes
t(acpnipals$li[,1])%*%acpnipals$li[,2] #ACP completo
t(acpnipals$li[,1])%*%acpnipals$li[,2] #ACP completo
t(acpnipals5NA$li[,1])%*%acpnipals5NA$li[,2] #Nipals 5%
t(acpnipals10NA$li[,1])%*%acpnipals10NA$li[,2] #Nipals 10%
t(acpnipals15NA$li[,1])%*%acpnipals15NA$li[,2] #Nipals 15%
t(acpnipals20NA$li[,1])%*%acpnipals20NA$li[,2] #Nipals 20%
t(pca.em5$li[,1])%*%pca.em5$li[,2] #ACP-EM 5%
t(pca.em10$li[,1])%*%pca.em10$li[,2] #ACP-EM 10%
t(pca.em15$li[,1])%*%pca.em15$li[,2] #ACP-EM 15%
t(pca.em20$li[,1])%*%pca.em20$li[,2] #ACP-EM 20%
acpnipals$c1
#Ortonormalidad en los vectores propios
#Norma
(acpnipals$c1[,1]*acpnipals$c1[,1])
acpnipals$c1[,1]%*%acpnipals$c1[,1]
#Ortonormalidad en los vectores propios
#Norma
sqrt(acpnipals$c1[,1]%*%acpnipals$c1[,1])
sqrt(acpnipals$c1[,2]%*%acpnipals$c1[,2]) #Vector propio 1 completa
sqrt(acpnipals$c1[,1])%*%acpnipals$c1[,1]) #Vector propio 1 nipals 20%
sqrt(acpnipals$c1[,1]%*%acpnipals$c1[,1]) #Vector propio 1 nipals 20%
sqrt(acpnipals$c1[,1]%*%acpnipals$c1[,1]) #Vector propio 1 nipals 20%
sqrt(acpnipals$c1[,1]%*%acpnipals$c1[,1]) #Vector propio 1 nipals 20%
sqrt(acpnipals$c1[,1]%*%acpnipals$c1[,1]) #Vector propio 1 nipals 20%
sqrt(acpnipals5NA$c1[,1]%*%acpnipals5NA$c1[,1]) #Vector propio 1 nipals 5%
sqrt(acpnipals$c1[,1]%*%acpnipals$c1[,1]) #Vector propio 1 completa
sqrt(acpnipals$c1[,2]%*%acpnipals$c1[,2]) #Vector propio 2 completa
sqrt(acpnipals5NA$c1[,1]%*%acpnipals5NA$c1[,1]) #Vector propio 1 nipals 5%
sqrt(acpnipals5NA$c1[,2]%*%acpnipals5NA$c1[,2]) #Vector propio 2 nipals 5%
sqrt(acpnipals10NA$c1[,1]%*%acpnipals10NA$c1[,1]) #Vector propio 1 nipals 10%
sqrt(acpnipals10NA$c1[,2]%*%acpnipals10NA$c1[,2]) #Vector propio 2 nipals 10%
sqrt(acpnipals15NA$c1[,1]%*%acpnipals15NA$c1[,1]) #Vector propio 1 nipals 15%
sqrt(acpnipals15NA$c1[,2]%*%acpnipals15NA$c1[,2]) #Vector propio 2 nipals 15%
sqrt(acpnipals20NA$c1[,1]%*%acpnipals20NA$c1[,1]) #Vector propio 1 nipals 20%
sqrt(acpnipals20NA$c1[,2]%*%acpnipals20NA$c1[,2]) #Vector propio 2 nipals 20%
sqrt(pca.em5$c1[,1]%*%pca.em5$c1[,1]) #Vector propio 1 ACP-EM 5%
sqrt(pca.em5$c1[,2]%*%pca.em5$c1[,2]) #Vector propio 2 ACP-EM 5%
sqrt(pca.em10$c1[,1]%*%pca.em10$c1[,1]) #Vector propio 1 ACP-EM 10%
sqrt(pca.em10$c1[,2]%*%pca.em10$c1[,2]) #Vector propio 2 ACP-EM 10%
sqrt(pca.em15$c1[,1]%*%pca.em15$c1[,1]) #Vector propio 1 ACP-EM 15%
sqrt(pca.em15$c1[,2]%*%pca.em15$c1[,2]) #Vector propio 2 ACP-EM 15%
sqrt(pca.em20$c1[,1]%*%pca.em20$c1[,1]) #Vector propio 1 ACP-EM 20%
sqrt(pca.em20$c1[,2]%*%pca.em20$c1[,2]) #Vector propio 2 ACP-E
t(acpnipals$c1[,1])%*%acpnipals$c1[,2] #ACP completo
t(acpnipals5NA$c1[,1])%*%acpnipals5NA$c1[,2] #Nipals 5%
t(acpnipals10NA$c1[,1])%*%acpnipals10NA$c1[,2] #Nipals 10%
t(acpnipals15NA$c1[,1])%*%acpnipals15NA$c1[,2] #Nipals 15%
t(acpnipals20NA$c1[,1])%*%acpnipals20NA$c1[,2] #Nipals 20%
t(pca.em5$c1[,1])%*%pca.em5$c1[,2] #ACP-EM 5%
t(pca.em10$c1[,1])%*%pca.em10$c1[,2] #ACP-EM 10%
t(pca.em15$c1[,1])%*%pca.em15$c1[,2] #ACP-EM 15%
t(pca.em20$c1[,1])%*%pca.em20$c1[,2] #ACP-EM 20%
#Imputación
acpnipals20NA$tab
acpnipals20NA
#Imputación
acpnipals20NA$tab
pca.em20$tab
#Imputación
scale(importaciones)
pca.em20$tab
#Imputación
mtrz(importaciones) #Matriz original estandarizada
#Imputación
matrZ(importaciones) #Matriz original estandarizada
#Imputación
matrZ(importaciones,20,6) #Matriz original estandarizada
#Imputación
matrZ(importaciones,20,6) #Matriz original estandarizada
pca.em20$tab
dudi.pca
nipals
citation('dudi.pca')
citation('ade4')
nb5
nb10
#ACPEM (ACP iterativo) con función de R
library(missMDA)
nb5 <- estim_ncpPCA(importaciones_1,ncp.max=6)
nb5
,method = 'EM'
nb5 <- estim_ncpPCA(importaciones_1,ncp.max=6,method = 'EM')
nb5
nb5 <- estim_ncpPCA(importaciones_1,ncp.max=6,method = c("Regularized",'EM'),method.cv = c("gcv","loo","Kfold"))
nb5
nb15 <- estim_ncpPCA(importaciones_3,ncp.max=6,method = 'EM')
nb15
nb5
nb10
nb5 <- estim_ncpPCA(importaciones_1,ncp.max=6,method=c("Regularized","EM"),method.cv = c("gcv","loo","Kfold"))
nb5
acpnipals20NA$li
#****ACP NO MANUAL (ADE4)
library("ade4")
acpnipals20NA$c1 #Vectores propios
acpnipals20NA$li #Coordenadas de los individuos
View(importaciones)
acpnipals20NA$c1 #Vectores propios
#Imputación NIPALS
#20 % NA´S
Z20NA<-acpnipals20NA$li %*% acpnipals20NA$c1 #Matriz imputada estandarizada por nipals
Z20NA
matrZ(importaciones,20,6)
#funcion para volver a la matriz original
#datos es la matriz a la cual se le va a hacer la desetandaricacion
#X es la mtriz original
matrZback=function(datos,X,n,p){
datos
X
#desestandarizacion
Z=datos
for(i in 1:p){
Z[,i]=(Z[,i]*sd2(X[,i]))+mean(X[,i])
}
return(Z)
}
Orig20NA<-matrZback(Z20NA,importaciones,20,6)
Orig20NA
matrZback
Z20NA
Orig20NA
acpnipals20NA$l
acpnipals20NA$c1
Orig20NA
Orig20NA
imp20NA$completeObs
impu5NA<-imp5NA$completeObs
impu10NA<-imp10NA$completeObs
impu15NA<-imp15NA$completeObs
impu20NA<-imp20NA$completeObs
impu15NA
## Imputación
imp20NA<-imputePCA(data.frame(importaciones_4),ncp=2)
impu20NA<-imp20NA$completeObs
impu20NA
## Imputación
imp15NA<-imputePCA(data.frame(importaciones_3),ncp=2)
impu15NA<-imp15NA$completeObs
impu15NA
imp15NA
importaciones_3
impu20NA
impu15NA
#Comparación coeficiente RV de scouffier
coeffRV(matrZback(impu5NA,importaciones,20,6),importaciones)
#Comparación coeficiente RV de scouffier
library('FactoMineR')
coeffRV(matrZback(impu5NA,importaciones,20,6),importaciones)
coeffRV(impu5NA,importaciones)
impu5NA
coeffRV(impu5NA,importaciones)
coeffRV(impu10NA,importaciones)
coeffRV(impu15NA,importaciones)
coeffRV(impu20NA,importaciones)
#Imputación NIPALS
#5 % NA´S
Z5NA<-acpnipals5NA$li %*% acpnipals5NA$c1 #Matriz imputada estandarizada por nipals
#10 % NA´S
Z10NA<-acpnipals10NA$li %*% acpnipals10NA$c1 #Matriz imputada estandarizada por nipals
#15 % NA´S
Z15NA<-acpnipals15NA$li %*% acpnipals15NA$c1 #Matriz imputada estandarizada por nipals
#Matrices originales imptadas nipals
Orig5NA<-matrZback(Z5NA,importaciones,20,6)
Orig10NA<-matrZback(Z10NA,importaciones,20,6)
Orig15NA<-matrZback(Z15NA,importaciones,20,6)
Orig20NA<-matrZback(Z20NA,importaciones,20,6)
coeffRV(impu5NA,importaciones)
coeffRV(impu10NA,importaciones)
coeffRV(impu15NA,importaciones)
coeffRV(impu20NA,importaciones)
coeffRV(Orig5NA,importaciones)
coeffRV(Orig10NA,importaciones)
coeffRV(Orig15NA,importaciones)
coeffRV(Orig20NA,importaciones)
acpnipals20NA$co #Coordenadas de las variables
t(acpnipals20NA$co) #Coordenadas de las variables
t(acpnipals20NA$co) #Coordenadas de las variables
pca.em20$co #Componentes principales variables
t(pca.em20$co) #Componentes principales variables
